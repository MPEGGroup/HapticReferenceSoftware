@startuml
'https://plantuml.com/sequence-diagram

autonumber "<b>[000]"
skinparam style strictuml
skinparam sequence {
    responseMessageBelowArrow true
    sequenceMessageAlign center
    BoxBackgroundColor LightBlue
    GroupBodyBackgroundColor transparent
    actorStyle awesome
}

title **RM0 Encoder sequence diagram**\n
hide unlinked

actor User
participant Main
box "RM0 serialization"
collections RM0SerializationRelatedClasses
end box
box "Metadata processing"
collections MetadataRelatedClasses
end box
box "PCM encoder"
collections PcmEncoderRelatedClasses
end box
box "AHAP encoder"
collections AhapEncoderRelatedClasses
end box
box "IVS encoder"
collections IvsEncoderRelatedClasses
end box

note over User
The user want to encode any reference file
So he needs to give the file path and its ohm file
end note

User -> Main ++: encode(file_path, ohm_path,\nencoding_quality, compress, output_path)

== Metadata parsing ==

Main -> MetadataRelatedClasses ++: read(ohm_path)

|||
ref over MetadataRelatedClasses
Here the ohm binary content
will be interpreted and a
metadata object is returned.

<i>cf. RM0EncoderSequence_ohm</i>
end ref
|||

return metadata
== File ingestion ==

Main -> Main : CheckFileExtension(file_path)
alt WAV_FILE
Main -> PcmEncoderRelatedClasses ++: encode(file_path, encoding_quality, metadata)

|||
ref over PcmEncoderRelatedClasses
Here the given wav file will be read
and converted into by a frequency
analysis process. At the end, a
RM0_Haptics instance is returned.

<i>cf. RM0EncoderSequence_wav</i>
end ref
|||

return rm0Haptics
else AHAP_FILE
Main -> AhapEncoderRelatedClasses ++: encode(file_path, metadata)

|||
ref over AhapEncoderRelatedClasses
Here the given AHAP file will be read
and transcoded into a RM0_Haptics
instance which will be returned.

<i>cf. RM0EncoderSequence_ahap</i>
end ref
|||

return rm0Haptics
else IVS_FILE
Main -> IvsEncoderRelatedClasses ++: encode(file_path, metadata)

|||
ref over IvsEncoderRelatedClasses
Here the given IVS file will be read
and transcoded into a RM0_Haptics
instance which will be returned.

<i>cf. RM0EncoderSequence_ivs</i>
end ref
|||

return rm0Haptics
end

== RM0 serialization ==

Main -> RM0SerializationRelatedClasses ++: write(rm0Haptics, output_path)

|||
ref over RM0SerializationRelatedClasses
Here the RM0_Haptics instance content
will be writen inside an output file.

<i>cf. RM0EncoderSequence_serialize</i>
end ref
|||

return EXIT_SUCCESS

====

return EXIT_SUCCESS
@enduml